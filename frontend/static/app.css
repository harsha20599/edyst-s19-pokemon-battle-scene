/* Body and background */
body{
  margin : 0;
  padding :0;
  font-family: monospace;
  overflow-x: hidden;
}
.container{
  max-width: 850px;
  margin : auto;
  margin-top: 50px;
  border-radius: 10px;
  padding: 40px;
  box-sizing: border-box;
}
.pokemon-background{
  background: url('bg.png') no-repeat;
  background-position: 100% 100%;
  background-size: cover;
}


/* scorecard */
.scoreboard{
  background : #386E1a;
  border-radius: 12px;
  border: 3px solid white;
  width : 400px;
  padding: 20px;
  box-sizing: border-box;
  position: relative;
  margin: auto;
}
.opponent-scoreboard .tag{
  color: #b00000;
}
.tag{
  position: absolute;
  top : 0;
  right: 0;
  font-weight: 600;
  background : #fff;
  padding: 5px 5px 5px 8px;
  font-size: 14px;
  border-bottom-left-radius: 5px;
  border-top-right-radius: 7px;
}
.name{
  font-weight: 700;
  color: white;
  font-size: 20px;
}
.total-progressbar{
  background: #989898;
  border-radius: 20px;
}
.actual-progressbar{
  background: #fff;
  width: 90%;
  height: 10px;
  border-radius: 30px;
}
.score{
  color: #fff;
}

/* Pokemon Image */
.pokemon-image{
  height: 120px;
  width: 120px;
  border-radius: 50%;
  box-sizing: border-box;
  margin: auto;
  position: relative;
}
.pokemon-image img{
  width: 180px;
  height: 180px;
}

.bottom-section{
  margin-top: 50px;
}


/* ATTACKS */
.attacks-section{
  margin: auto;
}
.attacks{
  display: grid;
  grid-template-columns: auto auto auto auto;
}
.attacks-heading{
  font-weight: 700;
  color: #fff;
  font-size: 20px;
  margin: 10px auto 10px auto;
}
.attack {
  background: #000;
  border: 3px solid white;
  border-radius: 20px;
  padding: 9px 7px 9px 10px;
  margin-left: 10px;
  font-weight: 700;
  cursor: pointer;
}
.attack-high{
  color: red;
}
.attack-medium{
  color: orange;
}
.attack-low{
  color: #35f235;
}
.attack:hover{
  box-shadow: #0808087a 4px 4px 20px;
}
.remaining-attacks{
  font-weight: 400;
  padding-right: 10px;
  float: right;
  color : #f8f8f8;
}


/* GRID */
.top-section,.bottom-section{
  display: grid;
  grid-template-columns: auto auto auto auto auto;
}
.opponent-scoreboard{
  grid-column-start: 1;
  grid-column-end: 4;
}
.user-scoreboard{
  grid-column-start: 3;
  grid-column-end: 6;
}
.user-image{
  grid-column-start: 2;
  grid-column-end: 3;
}


/* responsive */
@media only screen and (max-width: 630px) {

  .user-image {
    grid-column-start: 3;
    grid-column-end: 3;
  }
  .user-scoreboard {
    grid-column-start: 1;
    grid-column-end: 4;
  }
  .top-section, .bottom-section {
    display: grid;
    grid-template-columns: auto auto auto;
  }
  .opponent-image{
    margin-left: 20px;
    margin-top: 20px;
  }
  .user-image{
    margin-right: 20px;
    margin-bottom: 20px;
  }
  .bottom-section{
    margin-top: unset;
  }
  .pokemon-background{
    background-position: 50% -114px;
  }
  body{
    background: url('bg.png')  no-repeat center center fixed;
    background-position: center;
    background-size: cover;
  }
  .pokemon-background{
    background: unset;
  }
  .container{
    margin-top: unset;
    border-radius: unset;
    padding: 10px 0;
  }
  .scoreboard{
    max-width: 320px;
  }
  .attacks-section{
    padding: 20px;
  }
  .attacks{
    grid-template-columns: auto auto;
    grid-row-gap: 20px;
  }
} 

/* ANIMATIONS */

/* The pokemon animation is referred from
https://stackoverflow.com/questions/35990445/how-to-move-a-div-up-and-down-infinitely-in-css3 */
.pokemon-1 img{
  animation: MoveUpDown 2s linear infinite;
  position: absolute;
  left: 0;
  bottom: -20px;
}
.pokemon-2 img{
  animation: MoveUpDown 1.5s linear infinite;
  position: absolute;
  left: 0;
  bottom: -20px;
}
@keyframes MoveUpDown {
  0%, 100% {
    bottom: -15px;
  }
  50% {
    bottom: -20px;
  }
}

/* Referred from https://www.w3schools.com/howto/howto_css_shake_image.asp */
.shake{
  animation: shake 0.5s;
  animation-iteration-count: infinite;
}

@keyframes shake {
  0% { transform: translate(1px, 1px) rotate(0deg); }
  10% { transform: translate(-1px, -2px) rotate(-1deg); }
  20% { transform: translate(-3px, 0px) rotate(1deg); }
  30% { transform: translate(3px, 2px) rotate(0deg); }
  40% { transform: translate(1px, -1px) rotate(1deg); }
  50% { transform: translate(-1px, 2px) rotate(-1deg); }
  60% { transform: translate(-3px, 1px) rotate(0deg); }
  70% { transform: translate(3px, 1px) rotate(-1deg); }
  80% { transform: translate(-1px, -1px) rotate(1deg); }
  90% { transform: translate(1px, 2px) rotate(0deg); }
  100% { transform: translate(1px, -2px) rotate(-1deg); }
}